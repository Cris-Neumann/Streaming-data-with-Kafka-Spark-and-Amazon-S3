version: '3.3'
services:

  zookeeper:
    container_name: zookeeper
    image: docker.io/bitnami/zookeeper:3.9
    networks: 
      - net-streaming
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    volumes:
      - zookeeper_data:/bitnami/zookeeper
    restart: always

  kafka:
    container_name: kafka
    hostname: kafka
    image: docker.io/bitnami/kafka:3.6
    networks: 
      - net-streaming
    ports:
      - "29092:29092"
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:29092
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:29092
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
    volumes:
      - kafka_data:/bitnami/kafka
      - ./kafka_scripts:/opt/kafka/kafka_scripts
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always
    depends_on:
      - zookeeper

  kafdrop:
    container_name: kafdrop
    image: obsidiandynamics/kafdrop:3.27.0
    networks: 
      - net-streaming
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:9092"
    depends_on:
      - kafka
    restart: "no"

  spark-master:
    image: docker.io/bitnami/spark:3.5
    container_name: spark-master
    hostname: spark_master
    depends_on:
      - kafka
    environment:
      - SPARK_MODE=master
      - SPARK_LOCAL_IP=spark-master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - SPARK_WORKLOAD=master
    ports:
      - "9090:8080"
      - "7077:7077"
    expose:
      - "7077"
    volumes:
       - ./spark_scripts:/opt/spark_scripts
    networks:
      - net-streaming
    
  spark-worker-a:
    image: docker.io/bitnami/spark:3.5
    container_name: spark-worker-a
    ports:
      - "9091:8080"
      - "7000:7000"
    depends_on:
      - spark-master
    environment:
      - SPARK_MASTER=spark://spark-master:7077
      - SPARK_MASTER_IP=spark-master
      - SPARK_WORKER_CORES=7
      - SPARK_WORKER_MEMORY=4G
      - SPARK_DRIVER_MEMORY=2G
      - SPARK_EXECUTOR_MEMORY=2G
      - SPARK_WORKLOAD=worker
      - SPARK_LOCAL_IP=spark-worker-a
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    volumes:
       - ./spark_scripts:/opt/spark_scripts
    networks:
      - net-streaming
    deploy:
      resources:
        limits:
          cpus: "7"

volumes:
  zookeeper_data:
  kafka_data:

networks: 
  net-streaming:
    driver: bridge
